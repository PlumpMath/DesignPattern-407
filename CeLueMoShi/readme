策略模式
定义：策略模式定义了算法族，分别封装起来，让他们之间可以互相替换，此模式可以让算法的变化独立于使用算法的客户。

设计原则：
1.找出应用中可能需要变化之处，把他们独立出来，不要和那些不需要变化的代码混在一起；
2.多用组合少用继承，“有一个”可能比“是一个”更好；
3.针对接口编程，而不是针对实现编程。

整合鸭子的行为，关键在将鸭子飞行和叫的动作委托给别人处理，而不是直接定义抽象函数，这样既是面向接口编程，也不会导致在每个子类中都实现同样的函数。
同时，这样做还有另一个好处，我们甚至可以设置setBehavior()函数来在运行时改变鸭子的行为，使得类更加灵活，更加有弹性。

